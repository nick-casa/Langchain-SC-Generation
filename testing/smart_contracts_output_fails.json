{
    "Simple wallet with deposit and withdrawal functionality": {
        "check_results": {
            "abi": {
                "SimpleWallet": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "_from",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "Deposit",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "_to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "Withdrawal",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "balances",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "changeOwner",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "deposit",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            }
                        ],
                        "name": "getBalance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "withdraw",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0xa883A86F48ea351BABd6B0f58a7f2b70E61f6fD2",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract SimpleWallet {\n    address public owner;\n    mapping(address => uint256) public balances;\n    \n    event Deposit(address indexed _from, uint256 _amount);\n    event Withdrawal(address indexed _to, uint256 _amount);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can call this function\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function deposit() external payable {\n        balances[msg.sender] += msg.value;\n        emit Deposit(msg.sender, msg.value);\n    }\n\n    function withdraw(uint256 _amount) external {\n        require(balances[msg.sender] >= _amount, \"Insufficient balance\");\n        balances[msg.sender] -= _amount;\n        payable(msg.sender).transfer(_amount);\n        emit Withdrawal(msg.sender, _amount);\n    }\n\n    function changeOwner(address _newOwner) external onlyOwner {\n        owner = _newOwner;\n    }\n\n    function getBalance(address _user) external view returns (uint256) {\n        return balances[_user];\n    }\n}\n",
        "valid_code": true
    },
    "Crowdfunding contract to manage campaigns and fund collection": {
        "error": "Failed with status code 500"
    },
    "ERC20 token creation contract": {
        "error": "Failed with status code 500"
    },
    "Voting system using smart contracts": {
        "check_results": {
            "abi": {
                "VotingSystem": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "voter",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "candidateId",
                                "type": "uint256"
                            }
                        ],
                        "name": "Voted",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_candidateId",
                                "type": "uint256"
                            }
                        ],
                        "name": "getVoteCount",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "hasVoted",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_candidateId",
                                "type": "uint256"
                            }
                        ],
                        "name": "vote",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "voteCount",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "votes",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0xb0401a4cD43e972f13bD27391b3E31069bA6D593",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract VotingSystem {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => uint256) public votes;\n    mapping(address => bool) public hasVoted;\n    mapping(uint256 => uint256) public voteCount;\n\n    event AdminAdded(address indexed admin);\n    event AdminRemoved(address indexed admin);\n    event Voted(address indexed voter, uint256 indexed candidateId);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n\n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n        emit AdminAdded(_admin);\n    }\n\n    function removeAdmin(address _admin) public onlyOwner {\n        require(_admin != owner, \"Owner cannot be removed as admin\");\n        admins[_admin] = false;\n        emit AdminRemoved(_admin);\n    }\n\n    function vote(uint256 _candidateId) public {\n        require(!hasVoted[msg.sender], \"You have already voted\");\n        votes[msg.sender] = _candidateId;\n        hasVoted[msg.sender] = true;\n        voteCount[_candidateId]++;\n        emit Voted(msg.sender, _candidateId);\n    }\n\n    function getVoteCount(uint256 _candidateId) public view returns (uint256) {\n        return voteCount[_candidateId];\n    }\n}\n",
        "valid_code": true
    },
    "Time-locked wallet for delayed fund release": {
        "check_results": {
            "abi": {
                "TimeLockedWallet": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_owner",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_unlockDate",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "sender",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Received",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "Withdrawn",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "createdAt",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_unlockDate",
                                "type": "uint256"
                            }
                        ],
                        "name": "extendLock",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getBalance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "unlockDate",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "withdraw",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "stateMutability": "payable",
                        "type": "receive"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x612F7dCE03cDf02936E63419B043e3d466D7f2Aa",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract TimeLockedWallet {\n    address public owner;\n    uint public unlockDate;\n    uint public createdAt;\n    \n    modifier onlyOwner {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n    \n    event Received(address indexed sender, uint value);\n    event Withdrawn(address indexed owner, uint value);\n    \n    constructor(address _owner, uint _unlockDate) {\n        owner = _owner;\n        unlockDate = _unlockDate;\n        createdAt = block.timestamp;\n    }\n    \n    receive() external payable {\n        emit Received(msg.sender, msg.value);\n    }\n    \n    function withdraw(uint _amount) public onlyOwner {\n        require(block.timestamp >= unlockDate, \"Funds are still locked\");\n        require(_amount <= address(this).balance, \"Insufficient balance\");\n        \n        (bool success, ) = payable(owner).call{value: _amount}(\"\");\n        require(success, \"Transfer failed\");\n        \n        emit Withdrawn(owner, _amount);\n    }\n    \n    function extendLock(uint _unlockDate) public onlyOwner {\n        require(_unlockDate > unlockDate, \"New unlock date must be in the future\");\n        \n        unlockDate = _unlockDate;\n    }\n    \n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n",
        "valid_code": true
    },
    "Decentralized autonomous organization (DAO) setup contract": {
        "check_results": {
            "abi": {
                "DAOSetup": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "action",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "bool",
                                "name": "permission",
                                "type": "bool"
                            }
                        ],
                        "name": "UserPermissionSet",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "internalType": "string",
                                "name": "action",
                                "type": "string"
                            }
                        ],
                        "name": "getUserPermission",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "internalType": "string",
                                "name": "action",
                                "type": "string"
                            },
                            {
                                "internalType": "bool",
                                "name": "permission",
                                "type": "bool"
                            }
                        ],
                        "name": "setUserPermission",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "name": "userPermissions",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x8683B5225ec361d6202253858B8b3D1FA814b08B",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract DAOSetup {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => mapping(string => bool)) public userPermissions;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event AdminAdded(address indexed admin);\n    event AdminRemoved(address indexed admin);\n    event UserPermissionSet(address indexed user, string action, bool permission);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Invalid new owner address\");\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n    function addAdmin(address admin) public onlyOwner {\n        require(admin != address(0), \"Invalid admin address\");\n        admins[admin] = true;\n        emit AdminAdded(admin);\n    }\n\n    function removeAdmin(address admin) public onlyOwner {\n        admins[admin] = false;\n        emit AdminRemoved(admin);\n    }\n\n    function setUserPermission(address user, string memory action, bool permission) public {\n        require(admins[msg.sender], \"Only admins can set user permissions\");\n        userPermissions[user][action] = permission;\n        emit UserPermissionSet(user, action, permission);\n    }\n\n    function getUserPermission(address user, string memory action) public view returns (bool) {\n        return userPermissions[user][action];\n    }\n\n    // Add customizable actions with parameterized flexibility here\n\n    // Add dynamic feature or role management per user-specified criteria here\n\n    // Implement other functionalities as needed\n\n    // Remember to include extensive in-line documentation for each function\n\n    // Ensure to apply best practices for Solidity code structure\n\n    // Implement rigorous error handling and validation checks throughout the contract\n\n    // Use event emission to log significant contract interactions\n\n    // Optimize for gas efficiency without compromising on security\n\n    // Design interfaces for clean interactions with other contracts\n\n    // Address reentrancy risks with secure patterns\n\n    // Incorporate fail-safes and circuit breakers\n\n    // Design the contract to be scalable and handle a growing number of transactions efficiently\n\n    // Anticipate and handle edge cases with fallback mechanisms\n\n    // Consider forward compatibility with potential protocol upgrades and EIPs\n}\n",
        "valid_code": true
    },
    "Loan agreement smart contract": {
        "check_results": {
            "abi": {
                "LoanAgreement": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "borrower",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "LoanGranted",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "borrower",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "LoanRepaid",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_borrower",
                                "type": "address"
                            }
                        ],
                        "name": "getLoanBalance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_borrower",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "grantLoan",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "loans",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "repayLoan",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x941435D436C834F9d942d900F9De2F98375A8B1d",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract LoanAgreement {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => uint256) public loans;\n\n    event LoanGranted(address indexed borrower, uint256 amount);\n    event LoanRepaid(address indexed borrower, uint256 amount);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n\n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n\n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n\n    function grantLoan(address _borrower, uint256 _amount) public onlyAdmin {\n        require(_amount > 0, \"Loan amount must be greater than 0\");\n        loans[_borrower] += _amount;\n        emit LoanGranted(_borrower, _amount);\n    }\n\n    function repayLoan(uint256 _amount) public {\n        require(loans[msg.sender] >= _amount, \"Insufficient loan balance\");\n        loans[msg.sender] -= _amount;\n        emit LoanRepaid(msg.sender, _amount);\n    }\n\n    function getLoanBalance(address _borrower) public view returns (uint256) {\n        return loans[_borrower];\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        owner = _newOwner;\n    }\n}\n",
        "valid_code": true
    },
    "Simple marketplace contract for goods exchange": {
        "check_results": {
            "abi": {
                "Marketplace": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "id",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "seller",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "name",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "price",
                                "type": "uint256"
                            }
                        ],
                        "name": "ListingCreated",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "id",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "buyer",
                                "type": "address"
                            }
                        ],
                        "name": "ListingPurchased",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_name",
                                "type": "string"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_price",
                                "type": "uint256"
                            }
                        ],
                        "name": "createListing",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "listings",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "id",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "seller",
                                "type": "address"
                            },
                            {
                                "internalType": "string",
                                "name": "name",
                                "type": "string"
                            },
                            {
                                "internalType": "uint256",
                                "name": "price",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bool",
                                "name": "active",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "nextListingId",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_id",
                                "type": "uint256"
                            }
                        ],
                        "name": "purchaseListing",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_id",
                                "type": "uint256"
                            }
                        ],
                        "name": "toggleListing",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0xDf9C543aA8beA71447557Dba154a7301C0132543",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Marketplace {\n    address public owner;\n    mapping(address => bool) public admins;\n    uint256 public nextListingId;\n\n    struct Listing {\n        uint256 id;\n        address seller;\n        string name;\n        uint256 price;\n        bool active;\n    }\n\n    mapping(uint256 => Listing) public listings;\n\n    event ListingCreated(uint256 id, address seller, string name, uint256 price);\n    event ListingPurchased(uint256 id, address buyer);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can call this function\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can call this function\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n        nextListingId = 1;\n    }\n\n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n\n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n\n    function createListing(string memory _name, uint256 _price) public {\n        require(_price > 0, \"Price must be greater than 0\");\n        \n        listings[nextListingId] = Listing(nextListingId, msg.sender, _name, _price, true);\n        emit ListingCreated(nextListingId, msg.sender, _name, _price);\n        nextListingId++;\n    }\n\n    function purchaseListing(uint256 _id) public payable {\n        Listing storage listing = listings[_id];\n        require(listing.active, \"Listing is not active\");\n        require(msg.value >= listing.price, \"Insufficient funds\");\n\n        listing.active = false;\n        payable(listing.seller).transfer(msg.value);\n        emit ListingPurchased(_id, msg.sender);\n    }\n\n    function toggleListing(uint256 _id) public onlyAdmin {\n        Listing storage listing = listings[_id];\n        listing.active = !listing.active;\n    }\n}\n",
        "valid_code": true
    },
    "Contract for managing royalties in digital art sales": {
        "error": "Failed with status code 500"
    },
    "Rent payment contract for property leasing": {
        "check_results": {
            "abi": {
                "RentPaymentContract": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "tenant",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "RentPaid",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_tenant",
                                "type": "address"
                            }
                        ],
                        "name": "getRentBalance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "isAdmin",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "payRent",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "rentPayments",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_tenant",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "setRentPayment",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "withdrawRent",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0xa200C2d1D204aC44140Bc7a78bC58301c47D71B9",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract RentPaymentContract {\n    address public owner;\n    mapping(address => uint) public rentPayments;\n    mapping(address => bool) public isAdmin;\n\n    event RentPaid(address indexed tenant, uint amount);\n    event AdminAdded(address indexed admin);\n    event AdminRemoved(address indexed admin);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(isAdmin[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        isAdmin[msg.sender] = true;\n    }\n\n    function addAdmin(address _admin) public onlyOwner {\n        isAdmin[_admin] = true;\n        emit AdminAdded(_admin);\n    }\n\n    function removeAdmin(address _admin) public onlyOwner {\n        isAdmin[_admin] = false;\n        emit AdminRemoved(_admin);\n    }\n\n    function payRent() public payable {\n        rentPayments[msg.sender] += msg.value;\n        emit RentPaid(msg.sender, msg.value);\n    }\n\n    function withdrawRent(uint _amount) public {\n        require(rentPayments[msg.sender] >= _amount, \"Insufficient balance\");\n        rentPayments[msg.sender] -= _amount;\n        payable(msg.sender).transfer(_amount);\n    }\n\n    function setRentPayment(address _tenant, uint _amount) public onlyAdmin {\n        rentPayments[_tenant] = _amount;\n    }\n\n    function getRentBalance(address _tenant) public view returns (uint) {\n        return rentPayments[_tenant];\n    }\n}\n",
        "valid_code": true
    },
    "Subscription service management contract": {
        "check_results": {
            "abi": {
                "SubscriptionService": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "subscriber",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "duration",
                                "type": "uint256"
                            }
                        ],
                        "name": "SubscriptionCreated",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_subscriber",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_duration",
                                "type": "uint256"
                            }
                        ],
                        "name": "createSubscription",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "index",
                                "type": "uint256"
                            }
                        ],
                        "name": "getSubscription",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getSubscriptionCount",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "subscriptions",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "subscriber",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "duration",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "startTime",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x0c196631A4B264edE3cEbE619fB07D8f8150adE4",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract SubscriptionService {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    struct Subscription {\n        address subscriber;\n        uint256 amount;\n        uint256 duration;\n        uint256 startTime;\n    }\n    \n    Subscription[] public subscriptions;\n    \n    event SubscriptionCreated(address indexed subscriber, uint256 amount, uint256 duration);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n    \n    function createSubscription(address _subscriber, uint256 _amount, uint256 _duration) public onlyAdmin {\n        uint256 startTime = block.timestamp;\n        Subscription memory newSubscription = Subscription(_subscriber, _amount, _duration, startTime);\n        subscriptions.push(newSubscription);\n        emit SubscriptionCreated(_subscriber, _amount, _duration);\n    }\n    \n    function getSubscriptionCount() public view returns (uint256) {\n        return subscriptions.length;\n    }\n    \n    function getSubscription(uint256 index) public view returns (address, uint256, uint256, uint256) {\n        require(index < subscriptions.length, \"Invalid index\");\n        Subscription memory subscription = subscriptions[index];\n        return (subscription.subscriber, subscription.amount, subscription.duration, subscription.startTime);\n    }\n}\n",
        "valid_code": true
    },
    "Supply chain tracking contract": {
        "check_results": {
            "abi": {
                "SupplyChainTracking": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "productId",
                                "type": "uint256"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            }
                        ],
                        "name": "ProductTransfer",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_productId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "string",
                                "name": "_productName",
                                "type": "string"
                            }
                        ],
                        "name": "createProduct",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_productId",
                                "type": "uint256"
                            }
                        ],
                        "name": "getProductOwner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "products",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "productId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "string",
                                "name": "productName",
                                "type": "string"
                            },
                            {
                                "internalType": "address",
                                "name": "currentOwner",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_productId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "address",
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferProduct",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x5cA0A4eb0B123269a5380638AbE1895050Ee40B3",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract SupplyChainTracking {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    struct Product {\n        uint productId;\n        string productName;\n        address currentOwner;\n    }\n    \n    Product[] public products;\n    \n    event ProductTransfer(uint indexed productId, address indexed from, address indexed to);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function createProduct(uint _productId, string memory _productName) public onlyAdmin {\n        products.push(Product(_productId, _productName, msg.sender));\n    }\n    \n    function transferProduct(uint _productId, address _newOwner) public {\n        for (uint i = 0; i < products.length; i++) {\n            if (products[i].productId == _productId) {\n                require(products[i].currentOwner == msg.sender, \"You are not the current owner of this product\");\n                products[i].currentOwner = _newOwner;\n                emit ProductTransfer(_productId, msg.sender, _newOwner);\n                break;\n            }\n        }\n    }\n    \n    function getProductOwner(uint _productId) public view returns (address) {\n        for (uint i = 0; i < products.length; i++) {\n            if (products[i].productId == _productId) {\n                return products[i].currentOwner;\n            }\n        }\n        revert(\"Product not found\");\n    }\n}\n",
        "valid_code": true
    },
    "Escrow service contract for secure transactions": {
        "check_results": {
            "abi": {
                "Escrow": [
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_payer",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_payee",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_arbiter",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "_by",
                                "type": "address"
                            }
                        ],
                        "name": "DisputeStarted",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "_from",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "FundsDeposited",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "_to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "FundsRefunded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "_to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "FundsReleased",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "amount",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "arbiter",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "deposit",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "dispute",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "disputed",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getBalance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getContractDetails",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "payee",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "payer",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "refund",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "release",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "released",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x78C512D98F231dFA47C574264D58d9bC40c68eD6",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Escrow {\n    address public payer;\n    address public payee;\n    address public arbiter;\n    uint public amount;\n    bool public released;\n    bool public disputed;\n\n    constructor(address _payer, address _payee, address _arbiter) {\n        payer = _payer;\n        payee = _payee;\n        arbiter = _arbiter;\n    }\n\n    function deposit() external payable {\n        require(msg.sender == payer, \"Only payer can deposit\");\n        amount += msg.value;\n    }\n\n    function release() external {\n        require(msg.sender == arbiter, \"Only arbiter can release funds\");\n        require(released == false, \"Funds already released\");\n        released = true;\n        payable(payee).transfer(amount);\n    }\n\n    function dispute() external {\n        require(msg.sender == arbiter || msg.sender == payer, \"Only arbiter or payer can dispute\");\n        disputed = true;\n    }\n\n    function refund() external {\n        require(msg.sender == arbiter, \"Only arbiter can refund\");\n        require(disputed == true, \"No dispute to refund\");\n        payable(payer).transfer(amount);\n    }\n\n    function getBalance() external view returns (uint) {\n        return address(this).balance;\n    }\n\n    function getContractDetails() external view returns (address, address, address, uint, bool, bool) {\n        return (payer, payee, arbiter, amount, released, disputed);\n    }\n\n    event FundsDeposited(address indexed _from, uint _amount);\n    event FundsReleased(address indexed _to, uint _amount);\n    event DisputeStarted(address indexed _by);\n    event FundsRefunded(address indexed _to, uint _amount);\n}\n",
        "valid_code": true
    },
    "Insurance claim processing contract": {
        "check_results": {
            "abi": {
                "InsuranceClaimProcessing": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "action",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "ActionProcessed",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_action",
                                "type": "string"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "processAction",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x858F2587b7ffbD078D3711B5223C792892d3127f",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract InsuranceClaimProcessing {\n    \n    address public owner;\n    mapping(address => bool) public admins;\n    \n    event ActionProcessed(address indexed user, string action, uint256 amount);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n    \n    function processAction(string memory _action, uint256 _amount) public onlyAdmin {\n        // Customizable action processing logic\n        // Add user-defined actions here\n        // Implement user-defined parameters\n        \n        // Example action: \"approve\"\n        if (keccak256(abi.encodePacked(_action)) == keccak256(abi.encodePacked(\"approve\"))) {\n            // Process approval logic\n            emit ActionProcessed(msg.sender, _action, _amount);\n        } \n        // Example action: \"reject\"\n        else if (keccak256(abi.encodePacked(_action)) == keccak256(abi.encodePacked(\"reject\"))) {\n            // Process rejection logic\n            emit ActionProcessed(msg.sender, _action, _amount);\n        } \n        // Add more actions as needed\n        \n        // Implement additional actions with specific logic\n        \n        // Log the processed action\n        emit ActionProcessed(msg.sender, _action, _amount);\n    }\n}\n",
        "valid_code": true
    },
    "Contract for a decentralized betting system": {
        "check_results": {
            "abi": {
                "DecentralizedBettingSystem": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "bettor",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "outcome",
                                "type": "uint256"
                            }
                        ],
                        "name": "BetPlaced",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdministrator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "administrators",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_outcome",
                                "type": "uint256"
                            }
                        ],
                        "name": "placeBet",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdministrator",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address payable",
                                "name": "_recipient",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferFunds",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "withdrawFunds",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x7BA7902F0B1A4b311748102C1c7612a2BfD13e49",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract DecentralizedBettingSystem {\n    address public owner;\n    mapping(address => bool) public administrators;\n    \n    event BetPlaced(address indexed bettor, uint amount, uint outcome);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(administrators[msg.sender], \"Only administrators can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        administrators[msg.sender] = true;\n    }\n    \n    function addAdministrator(address _admin) public onlyOwner {\n        administrators[_admin] = true;\n    }\n    \n    function removeAdministrator(address _admin) public onlyOwner {\n        require(_admin != owner, \"Cannot remove contract owner as administrator\");\n        administrators[_admin] = false;\n    }\n    \n    function placeBet(uint _outcome) public payable {\n        require(_outcome == 0 || _outcome == 1, \"Invalid outcome. Use 0 for outcome 1, 1 for outcome 2\");\n        emit BetPlaced(msg.sender, msg.value, _outcome);\n    }\n    \n    function transferFunds(address payable _recipient, uint _amount) public onlyAdmin {\n        require(_amount <= address(this).balance, \"Insufficient contract balance\");\n        _recipient.transfer(_amount);\n    }\n    \n    function withdrawFunds(uint _amount) public onlyOwner {\n        require(_amount <= address(this).balance, \"Insufficient contract balance\");\n        payable(owner).transfer(_amount);\n    }\n}\n",
        "valid_code": true
    },
    "Ticket sales and event registration system": {
        "check_results": {
            "abi": {
                "TicketSales": [
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_ticketPrice",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_totalTickets",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "buyer",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "ticketsPurchased",
                                "type": "uint256"
                            }
                        ],
                        "name": "TicketPurchased",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            }
                        ],
                        "name": "getUserTicketCount",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_numTickets",
                                "type": "uint256"
                            }
                        ],
                        "name": "purchaseTickets",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_ticketPrice",
                                "type": "uint256"
                            }
                        ],
                        "name": "setTicketPrice",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_totalTickets",
                                "type": "uint256"
                            }
                        ],
                        "name": "setTotalTickets",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "ticketPrice",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalSoldTickets",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalTickets",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "userTickets",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "withdrawFunds",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x8AB434F37042246Efe85a054A6A65752b18335fa",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract TicketSales {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => uint256) public userTickets;\n    uint256 public ticketPrice;\n    uint256 public totalTickets;\n    uint256 public totalSoldTickets;\n\n    event TicketPurchased(address indexed buyer, uint256 ticketsPurchased);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n\n    constructor(uint256 _ticketPrice, uint256 _totalTickets) {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n        ticketPrice = _ticketPrice;\n        totalTickets = _totalTickets;\n    }\n\n    function setTicketPrice(uint256 _ticketPrice) public onlyOwner {\n        ticketPrice = _ticketPrice;\n    }\n\n    function setTotalTickets(uint256 _totalTickets) public onlyOwner {\n        totalTickets = _totalTickets;\n    }\n\n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n\n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n\n    function purchaseTickets(uint256 _numTickets) public payable {\n        require(_numTickets > 0, \"Number of tickets must be greater than 0\");\n        require(totalSoldTickets + _numTickets <= totalTickets, \"Not enough tickets available\");\n        require(msg.value == ticketPrice * _numTickets, \"Incorrect amount sent\");\n\n        totalSoldTickets += _numTickets;\n        userTickets[msg.sender] += _numTickets;\n        \n        emit TicketPurchased(msg.sender, _numTickets);\n    }\n\n    function getUserTicketCount(address _user) public view returns (uint256) {\n        return userTickets[_user];\n    }\n\n    function withdrawFunds() public onlyOwner {\n        payable(owner).transfer(address(this).balance);\n    }\n}\n",
        "valid_code": true
    },
    "Fractional ownership contract for real estate": {
        "check_results": {
            "abi": {
                "FractionalOwnership": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "SharesTransferred",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "param1",
                                "type": "uint256"
                            },
                            {
                                "internalType": "string",
                                "name": "param2",
                                "type": "string"
                            }
                        ],
                        "name": "defineCustomAction",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "isAdmin",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "shares",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferShares",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "stateMutability": "payable",
                        "type": "receive"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0xe7998578994Dd14aEaa214beefce50869FaF62d3",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract FractionalOwnership {\n    address public owner;\n    mapping(address => uint256) public shares;\n    mapping(address => bool) public isAdmin;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event SharesTransferred(address indexed from, address indexed to, uint256 amount);\n    event AdminAdded(address indexed admin);\n    event AdminRemoved(address indexed admin);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(isAdmin[msg.sender], \"Only admin can call this function\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        isAdmin[msg.sender] = true;\n        emit OwnershipTransferred(address(0), owner);\n        emit AdminAdded(owner);\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Invalid new owner address\");\n        owner = newOwner;\n        isAdmin[newOwner] = true;\n        emit OwnershipTransferred(msg.sender, newOwner);\n        emit AdminAdded(newOwner);\n        isAdmin[msg.sender] = false;\n        emit AdminRemoved(msg.sender);\n    }\n\n    function addAdmin(address newAdmin) public onlyOwner {\n        require(newAdmin != address(0), \"Invalid new admin address\");\n        isAdmin[newAdmin] = true;\n        emit AdminAdded(newAdmin);\n    }\n\n    function removeAdmin(address admin) public onlyOwner {\n        require(admin != address(0), \"Invalid admin address\");\n        require(isAdmin[admin], \"Address is not an admin\");\n        isAdmin[admin] = false;\n        emit AdminRemoved(admin);\n    }\n\n    function transferShares(address to, uint256 amount) public {\n        require(shares[msg.sender] >= amount, \"Insufficient shares\");\n        shares[msg.sender] -= amount;\n        shares[to] += amount;\n        emit SharesTransferred(msg.sender, to, amount);\n    }\n\n    function defineCustomAction(uint256 param1, string memory param2) public onlyAdmin {\n        // Customizable action logic here\n    }\n\n    // Other functions and functionalities can be added as per requirements\n\n    // Fallback function to reject any ether sent to the contract\n    receive() external payable {\n        revert(\"Contract does not accept Ether\");\n    }\n}\n",
        "valid_code": true
    },
    "Loyalty points system contract": {
        "check_results": {
            "abi": {
                "LoyaltyPointsSystem": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "PointsEarned",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "PointsRedeemed",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "earnPoints",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "isAdmin",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "loyaltyPoints",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "redeemPoints",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_to",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferPoints",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x912c38C9086037A0087154FCebf98732b586511C",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract LoyaltyPointsSystem {\n    address public owner;\n    mapping(address => uint256) public loyaltyPoints;\n    mapping(address => bool) public isAdmin;\n\n    event PointsEarned(address indexed user, uint256 amount);\n    event PointsRedeemed(address indexed user, uint256 amount);\n    event AdminAdded(address indexed admin);\n    event AdminRemoved(address indexed admin);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can call this function\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(isAdmin[msg.sender], \"Only admins can call this function\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        isAdmin[msg.sender] = true;\n    }\n\n    function addAdmin(address _admin) public onlyOwner {\n        isAdmin[_admin] = true;\n        emit AdminAdded(_admin);\n    }\n\n    function removeAdmin(address _admin) public onlyOwner {\n        isAdmin[_admin] = false;\n        emit AdminRemoved(_admin);\n    }\n\n    function earnPoints(uint256 _amount) public {\n        loyaltyPoints[msg.sender] += _amount;\n        emit PointsEarned(msg.sender, _amount);\n    }\n\n    function redeemPoints(uint256 _amount) public {\n        require(loyaltyPoints[msg.sender] >= _amount, \"Insufficient loyalty points\");\n        loyaltyPoints[msg.sender] -= _amount;\n        emit PointsRedeemed(msg.sender, _amount);\n    }\n\n    function transferPoints(address _to, uint256 _amount) public {\n        require(loyaltyPoints[msg.sender] >= _amount, \"Insufficient loyalty points\");\n        loyaltyPoints[msg.sender] -= _amount;\n        loyaltyPoints[_to] += _amount;\n        emit PointsRedeemed(msg.sender, _amount);\n        emit PointsEarned(_to, _amount);\n    }\n}\n",
        "valid_code": true
    },
    "Contract for managing intellectual property rights": {
        "check_results": {
            "abi": {
                "IntellectualPropertyRights": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "actionId",
                                "type": "uint256"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "actionType",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "Action",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_actionId",
                                "type": "uint256"
                            },
                            {
                                "internalType": "string",
                                "name": "_actionType",
                                "type": "string"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "performAction",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x95Bcc3459AcE60754e35c473170eaAEf8BAc3440",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract IntellectualPropertyRights {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    event Action(uint indexed actionId, address indexed user, string actionType, uint amount);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _newAdmin) public onlyOwner {\n        admins[_newAdmin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        require(_admin != owner, \"Owner cannot be removed as admin\");\n        admins[_admin] = false;\n    }\n    \n    function performAction(uint _actionId, string memory _actionType, uint _amount) public {\n        emit Action(_actionId, msg.sender, _actionType, _amount);\n    }\n    \n    function transferOwnership(address _newOwner) public onlyOwner {\n        owner = _newOwner;\n    }\n}\n",
        "valid_code": true
    },
    "Fitness challenge contract rewarding participants": {
        "check_results": {
            "abi": {
                "FitnessChallenge": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "NewAdmin",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "participant",
                                "type": "address"
                            }
                        ],
                        "name": "NewParticipant",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "participant",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newScore",
                                "type": "uint256"
                            }
                        ],
                        "name": "ScoreUpdated",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_participant",
                                "type": "address"
                            }
                        ],
                        "name": "addParticipant",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "isAdmin",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "isParticipant",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "participantScores",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_participant",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_score",
                                "type": "uint256"
                            }
                        ],
                        "name": "updateScore",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0xeD3050d1ab06dD67929eE308eA84F8F867816001",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract FitnessChallenge {\n    address public owner;\n    mapping(address => uint256) public participantScores;\n    mapping(address => bool) public isAdmin;\n    mapping(address => bool) public isParticipant;\n\n    event NewParticipant(address participant);\n    event NewAdmin(address admin);\n    event ScoreUpdated(address participant, uint256 newScore);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can call this function\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(isAdmin[msg.sender], \"Only admins can call this function\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        isAdmin[msg.sender] = true;\n    }\n\n    function addAdmin(address _admin) public onlyOwner {\n        isAdmin[_admin] = true;\n        emit NewAdmin(_admin);\n    }\n\n    function addParticipant(address _participant) public onlyAdmin {\n        isParticipant[_participant] = true;\n        emit NewParticipant(_participant);\n    }\n\n    function updateScore(address _participant, uint256 _score) public {\n        require(isParticipant[_participant], \"Address is not a participant\");\n        participantScores[_participant] = _score;\n        emit ScoreUpdated(_participant, _score);\n    }\n}\n",
        "valid_code": true
    },
    "Automated invoice payment contract": {
        "check_results": {
            "abi": {
                "InvoicePaymentContract": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "payer",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "invoiceId",
                                "type": "string"
                            }
                        ],
                        "name": "InvoicePaid",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "string",
                                "name": "_invoiceId",
                                "type": "string"
                            }
                        ],
                        "name": "payInvoice",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "withdraw",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "stateMutability": "payable",
                        "type": "receive"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0xD89e6144dDb356e04F7B5Ad7123CBEc210d0bE7c",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract InvoicePaymentContract {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    event InvoicePaid(address indexed payer, uint amount, string invoiceId);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n    \n    function payInvoice(uint _amount, string memory _invoiceId) public payable {\n        require(msg.value == _amount, \"Incorrect amount sent\");\n        \n        // Customizable actions can be added here\n        \n        emit InvoicePaid(msg.sender, _amount, _invoiceId);\n    }\n    \n    function withdraw(uint _amount) public onlyOwner {\n        require(_amount <= address(this).balance, \"Insufficient contract balance\");\n        payable(owner).transfer(_amount);\n    }\n    \n    function transferOwnership(address _newOwner) public onlyOwner {\n        owner = _newOwner;\n    }\n    \n    // Add more functions as needed\n    \n    // Fallback function to receive ether\n    receive() external payable {}\n}\n",
        "valid_code": true
    },
    "Contract for binding agreements or notarization": {
        "check_results": {
            "abi": {
                "BindingAgreements": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "bytes32",
                                "name": "agreementHash",
                                "type": "bytes32"
                            }
                        ],
                        "name": "AgreementSet",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "",
                                "type": "bytes32"
                            }
                        ],
                        "name": "agreements",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "_agreementHash",
                                "type": "bytes32"
                            }
                        ],
                        "name": "checkAgreement",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "isAdmin",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "isOwner",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "_agreementHash",
                                "type": "bytes32"
                            }
                        ],
                        "name": "setAgreement",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "setOwner",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x497E0301Dff9c84a28300c0f3E756Fe9ec0712Aa",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract BindingAgreements {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => mapping(bytes32 => bool)) public agreements;\n\n    event AgreementSet(address indexed user, bytes32 indexed agreementHash);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n\n    function setOwner(address _newOwner) public onlyOwner {\n        owner = _newOwner;\n    }\n\n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n\n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n\n    function setAgreement(address _user, bytes32 _agreementHash) public onlyAdmin {\n        agreements[_user][_agreementHash] = true;\n        emit AgreementSet(_user, _agreementHash);\n    }\n\n    function checkAgreement(address _user, bytes32 _agreementHash) public view returns (bool) {\n        return agreements[_user][_agreementHash];\n    }\n\n    function isAdmin(address _admin) public view returns (bool) {\n        return admins[_admin];\n    }\n\n    function isOwner() public view returns (bool) {\n        return msg.sender == owner;\n    }\n}\n",
        "valid_code": true
    },
    "Pension fund disbursement system": {
        "check_results": {
            "abi": {
                "PensionFundDisbursementSystem": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "PensionDeposit",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "PensionWithdrawal",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "depositPension",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            }
                        ],
                        "name": "getPensionBalance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "pensionBalances",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "setPensionBalance",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "withdrawPension",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x89b066AB801E25473b24231ab63892C4b1EC6500",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract PensionFundDisbursementSystem {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => uint256) public pensionBalances;\n    \n    event AdminAdded(address indexed admin);\n    event AdminRemoved(address indexed admin);\n    event PensionDeposit(address indexed user, uint256 amount);\n    event PensionWithdrawal(address indexed user, uint256 amount);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n        emit AdminAdded(_admin);\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n        emit AdminRemoved(_admin);\n    }\n    \n    function depositPension() public payable {\n        pensionBalances[msg.sender] += msg.value;\n        emit PensionDeposit(msg.sender, msg.value);\n    }\n    \n    function withdrawPension(uint256 _amount) public {\n        require(pensionBalances[msg.sender] >= _amount, \"Insufficient pension balance\");\n        \n        pensionBalances[msg.sender] -= _amount;\n        payable(msg.sender).transfer(_amount);\n        emit PensionWithdrawal(msg.sender, _amount);\n    }\n    \n    function setPensionBalance(address _user, uint256 _amount) public onlyAdmin {\n        pensionBalances[_user] = _amount;\n    }\n    \n    function getPensionBalance(address _user) public view returns (uint256) {\n        return pensionBalances[_user];\n    }\n}\n",
        "valid_code": true
    },
    "Contract for decentralized file storage payments": {
        "check_results": {
            "abi": {
                "DecentralizedFileStorage": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "string",
                                "name": "fileId",
                                "type": "string"
                            }
                        ],
                        "name": "FileForSale",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "string",
                                "name": "fileId",
                                "type": "string"
                            }
                        ],
                        "name": "FileNotForSale",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "string",
                                "name": "fileId",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newPrice",
                                "type": "uint256"
                            }
                        ],
                        "name": "FilePriceUpdated",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "buyer",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "string",
                                "name": "fileId",
                                "type": "string"
                            }
                        ],
                        "name": "FilePurchased",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "uploader",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "string",
                                "name": "fileId",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "price",
                                "type": "uint256"
                            }
                        ],
                        "name": "FileUploaded",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "",
                                "type": "string"
                            }
                        ],
                        "name": "files",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "uploader",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "price",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bool",
                                "name": "isForSale",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_fileId",
                                "type": "string"
                            }
                        ],
                        "name": "purchaseFile",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_fileId",
                                "type": "string"
                            }
                        ],
                        "name": "toggleFileForSale",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_fileId",
                                "type": "string"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_newPrice",
                                "type": "uint256"
                            }
                        ],
                        "name": "updateFilePrice",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_fileId",
                                "type": "string"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_price",
                                "type": "uint256"
                            }
                        ],
                        "name": "uploadFile",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x63fAd3e349903c16AE03877E08592369434A7C30",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract DecentralizedFileStorage {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    struct File {\n        address uploader;\n        uint256 price;\n        bool isForSale;\n    }\n    \n    mapping(string => File) public files;\n\n    event FileUploaded(address indexed uploader, string indexed fileId, uint256 price);\n    event FilePriceUpdated(string indexed fileId, uint256 newPrice);\n    event FileForSale(string indexed fileId);\n    event FileNotForSale(string indexed fileId);\n    event FilePurchased(address indexed buyer, string indexed fileId);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n\n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n\n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n\n    function uploadFile(string memory _fileId, uint256 _price) public {\n        require(files[_fileId].uploader == address(0), \"File with the same ID already exists\");\n        \n        files[_fileId] = File(msg.sender, _price, false);\n        emit FileUploaded(msg.sender, _fileId, _price);\n    }\n\n    function updateFilePrice(string memory _fileId, uint256 _newPrice) public {\n        require(files[_fileId].uploader == msg.sender, \"Only file uploader can update the price\");\n        \n        files[_fileId].price = _newPrice;\n        emit FilePriceUpdated(_fileId, _newPrice);\n    }\n\n    function toggleFileForSale(string memory _fileId) public {\n        require(files[_fileId].uploader == msg.sender, \"Only file uploader can toggle for sale status\");\n        \n        files[_fileId].isForSale = !files[_fileId].isForSale;\n        \n        if (files[_fileId].isForSale) {\n            emit FileForSale(_fileId);\n        } else {\n            emit FileNotForSale(_fileId);\n        }\n    }\n\n    function purchaseFile(string memory _fileId) public payable {\n        require(files[_fileId].uploader != address(0), \"File with the specified ID does not exist\");\n        require(files[_fileId].isForSale, \"File is not for sale\");\n        require(msg.value >= files[_fileId].price, \"Insufficient funds to purchase the file\");\n        \n        address payable seller = payable(files[_fileId].uploader);\n        seller.transfer(msg.value);\n        \n        emit FilePurchased(msg.sender, _fileId);\n        \n        delete files[_fileId];\n    }\n}\n",
        "valid_code": true
    },
    "Energy trading contract for renewable energy credits": {
        "check_results": {
            "abi": {
                "EnergyTradingContract": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "EnergyCreditsTransferred",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            }
                        ],
                        "name": "UserAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            }
                        ],
                        "name": "UserRemoved",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            }
                        ],
                        "name": "addUser",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            }
                        ],
                        "name": "removeUser",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            },
                            {
                                "internalType": "bool",
                                "name": "_status",
                                "type": "bool"
                            }
                        ],
                        "name": "setAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "setOwner",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_to",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferEnergyCredits",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "users",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "isActive",
                                "type": "bool"
                            },
                            {
                                "internalType": "uint256",
                                "name": "energyCredits",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x70071a5F7B7dbD803eB934179b69fB873f69d789",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract EnergyTradingContract {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    struct User {\n        bool isActive;\n        uint256 energyCredits;\n    }\n    mapping(address => User) public users;\n    \n    event UserAdded(address user);\n    event UserRemoved(address user);\n    event EnergyCreditsTransferred(address from, address to, uint256 amount);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addUser(address _user) public onlyAdmin {\n        require(!users[_user].isActive, \"User already exists\");\n        users[_user].isActive = true;\n        emit UserAdded(_user);\n    }\n    \n    function removeUser(address _user) public onlyAdmin {\n        require(users[_user].isActive, \"User does not exist\");\n        users[_user].isActive = false;\n        emit UserRemoved(_user);\n    }\n    \n    function transferEnergyCredits(address _to, uint256 _amount) public {\n        require(users[msg.sender].isActive, \"Sender is not an active user\");\n        require(users[_to].isActive, \"Recipient is not an active user\");\n        require(users[msg.sender].energyCredits >= _amount, \"Insufficient energy credits\");\n        \n        users[msg.sender].energyCredits -= _amount;\n        users[_to].energyCredits += _amount;\n        \n        emit EnergyCreditsTransferred(msg.sender, _to, _amount);\n    }\n    \n    function setAdmin(address _admin, bool _status) public onlyOwner {\n        admins[_admin] = _status;\n    }\n    \n    function setOwner(address _newOwner) public onlyOwner {\n        owner = _newOwner;\n    }\n}\n",
        "valid_code": true
    },
    "Peer-to-peer lending contract": {
        "check_results": {
            "abi": {
                "PeerToPeerLending": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "borrower",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "interestRate",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "duration",
                                "type": "uint256"
                            }
                        ],
                        "name": "LoanCreated",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "borrower",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "LoanRepaid",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_interestRate",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_duration",
                                "type": "uint256"
                            }
                        ],
                        "name": "createLoan",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getLoanCount",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_index",
                                "type": "uint256"
                            }
                        ],
                        "name": "getLoanDetails",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "loans",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "borrower",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "interestRate",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "duration",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "startTime",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bool",
                                "name": "active",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_index",
                                "type": "uint256"
                            }
                        ],
                        "name": "repayLoan",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0xD5b62FA964d80a7905672E3AD77605b3c773c5Eb",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract PeerToPeerLending {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    struct Loan {\n        address borrower;\n        uint amount;\n        uint interestRate;\n        uint duration;\n        uint startTime;\n        bool active;\n    }\n    \n    Loan[] public loans;\n    \n    event LoanCreated(address indexed borrower, uint amount, uint interestRate, uint duration);\n    event LoanRepaid(address indexed borrower, uint amount);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can call this function\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can call this function\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n    \n    function createLoan(uint _amount, uint _interestRate, uint _duration) public {\n        Loan memory newLoan = Loan(msg.sender, _amount, _interestRate, _duration, block.timestamp, true);\n        loans.push(newLoan);\n        emit LoanCreated(msg.sender, _amount, _interestRate, _duration);\n    }\n    \n    function repayLoan(uint _index) public payable {\n        Loan storage loan = loans[_index];\n        require(loan.active, \"Loan is not active\");\n        require(msg.value == loan.amount + (loan.amount * loan.interestRate / 100), \"Incorrect repayment amount\");\n        \n        payable(loan.borrower).transfer(msg.value);\n        loan.active = false;\n        \n        emit LoanRepaid(loan.borrower, msg.value);\n    }\n    \n    function getLoanCount() public view returns (uint) {\n        return loans.length;\n    }\n    \n    function getLoanDetails(uint _index) public view returns (address, uint, uint, uint, uint, bool) {\n        Loan memory loan = loans[_index];\n        return (loan.borrower, loan.amount, loan.interestRate, loan.duration, loan.startTime, loan.active);\n    }\n}\n",
        "valid_code": true
    },
    "Automated charity donation contract": {
        "check_results": {
            "abi": {
                "CharityDonation": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "donor",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "DonationReceived",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "charity",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "DonationSent",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "inputs": [],
                        "name": "contractBalance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "donate",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "donations",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "donor",
                                "type": "address"
                            }
                        ],
                        "name": "getDonorDonation",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalDonations",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address payable",
                                "name": "charity",
                                "type": "address"
                            }
                        ],
                        "name": "withdrawDonations",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "stateMutability": "payable",
                        "type": "receive"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x1325E2b9E18c253957A365cE417F01255EC70Be4",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CharityDonation {\n    address public owner;\n    mapping(address => uint256) public donations;\n    uint256 public totalDonations;\n\n    event DonationReceived(address indexed donor, uint256 amount);\n    event DonationSent(address indexed charity, uint256 amount);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can call this function\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Invalid new owner address\");\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n    function donate() public payable {\n        require(msg.value > 0, \"Donation amount must be greater than 0\");\n        donations[msg.sender] += msg.value;\n        totalDonations += msg.value;\n        emit DonationReceived(msg.sender, msg.value);\n    }\n\n    function withdrawDonations(address payable charity) public onlyOwner {\n        require(charity != address(0), \"Invalid charity address\");\n        require(address(this).balance > 0, \"Contract balance is zero\");\n        uint256 amount = address(this).balance;\n        totalDonations = 0;\n        charity.transfer(amount);\n        emit DonationSent(charity, amount);\n    }\n\n    function getDonorDonation(address donor) public view returns (uint256) {\n        return donations[donor];\n    }\n\n    function contractBalance() public view returns (uint256) {\n        return address(this).balance;\n    }\n\n    receive() external payable {\n        donate();\n    }\n}\n",
        "valid_code": true
    },
    "Multi-signature wallet for enhanced security": {
        "error": "Failed with status code 500"
    },
    "Debt issuance contract for bonds": {
        "check_results": {
            "abi": {
                "DebtIssuanceContract": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "debtor",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "DebtIssued",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "debtor",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "DebtRepaid",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "debtBalances",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_debtor",
                                "type": "address"
                            }
                        ],
                        "name": "getDebtBalance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_debtor",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "issueDebt",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "repayDebt",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x47573d3Ee5B32c71136B6c43D0687ee5Be0cAB9C",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract DebtIssuanceContract {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => uint256) public debtBalances;\n    \n    event DebtIssued(address indexed debtor, uint256 amount);\n    event DebtRepaid(address indexed debtor, uint256 amount);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can call this function\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can call this function\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        require(_admin != owner, \"Owner cannot be removed as admin\");\n        admins[_admin] = false;\n    }\n    \n    function issueDebt(address _debtor, uint256 _amount) public onlyAdmin {\n        debtBalances[_debtor] += _amount;\n        emit DebtIssued(_debtor, _amount);\n    }\n    \n    function repayDebt(uint256 _amount) public {\n        require(debtBalances[msg.sender] >= _amount, \"Insufficient debt balance\");\n        debtBalances[msg.sender] -= _amount;\n        emit DebtRepaid(msg.sender, _amount);\n    }\n    \n    function getDebtBalance(address _debtor) public view returns (uint256) {\n        return debtBalances[_debtor];\n    }\n}\n",
        "valid_code": true
    },
    "Revenue sharing contract": {
        "check_results": {
            "abi": {
                "RevenueSharing": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "PaymentReceived",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "PaymentSent",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "sharesAdded",
                                "type": "uint256"
                            }
                        ],
                        "name": "ShareAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "sharesRemoved",
                                "type": "uint256"
                            }
                        ],
                        "name": "ShareRemoved",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "addShare",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "receivePayment",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "removeShare",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address payable",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "sendPayment",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "shares",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalShares",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "withdraw",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x79AF44F353772AF806432875853bca7FF2085063",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract RevenueSharing {\n    address public owner;\n    mapping(address => uint256) public shares;\n    mapping(address => bool) public admins;\n    uint256 public totalShares;\n    \n    event ShareAdded(address indexed user, uint256 sharesAdded);\n    event ShareRemoved(address indexed user, uint256 sharesRemoved);\n    event AdminAdded(address indexed admin);\n    event AdminRemoved(address indexed admin);\n    event PaymentReceived(address indexed from, uint256 amount);\n    event PaymentSent(address indexed to, uint256 amount);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can call this function\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addShare(address user, uint256 amount) public onlyAdmin {\n        require(user != address(0), \"Invalid address\");\n        shares[user] += amount;\n        totalShares += amount;\n        emit ShareAdded(user, amount);\n    }\n    \n    function removeShare(address user, uint256 amount) public onlyAdmin {\n        require(shares[user] >= amount, \"Insufficient shares\");\n        shares[user] -= amount;\n        totalShares -= amount;\n        emit ShareRemoved(user, amount);\n    }\n    \n    function addAdmin(address admin) public onlyOwner {\n        require(admin != address(0), \"Invalid address\");\n        admins[admin] = true;\n        emit AdminAdded(admin);\n    }\n    \n    function removeAdmin(address admin) public onlyOwner {\n        require(admins[admin], \"Not an admin\");\n        delete admins[admin];\n        emit AdminRemoved(admin);\n    }\n    \n    function receivePayment() external payable {\n        emit PaymentReceived(msg.sender, msg.value);\n    }\n    \n    function sendPayment(address payable to, uint256 amount) public onlyOwner {\n        require(address(this).balance >= amount, \"Insufficient balance\");\n        to.transfer(amount);\n        emit PaymentSent(to, amount);\n    }\n    \n    function withdraw() public onlyOwner {\n        payable(owner).transfer(address(this).balance);\n    }\n}\n",
        "valid_code": true
    },
    "Sports betting contract": {
        "check_results": {
            "abi": {
                "SportsBetting": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "betId",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "outcome",
                                "type": "uint256"
                            }
                        ],
                        "name": "BetClaimed",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "betId",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "outcome",
                                "type": "uint256"
                            }
                        ],
                        "name": "BetPlaced",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "betCount",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "bets",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "outcome",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bool",
                                "name": "claimed",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_betId",
                                "type": "uint256"
                            }
                        ],
                        "name": "claimBet",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_outcome",
                                "type": "uint256"
                            }
                        ],
                        "name": "placeBet",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x5eE5a2375Ad8918E353B5DA88c4ba039454f66E7",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract SportsBetting {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    struct Bet {\n        address user;\n        uint amount;\n        uint outcome;\n        bool claimed;\n    }\n    \n    mapping(uint => Bet) public bets;\n    uint public betCount;\n    \n    event BetPlaced(address indexed user, uint indexed betId, uint amount, uint outcome);\n    event BetClaimed(address indexed user, uint indexed betId, uint amount, uint outcome);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can call this function\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can call this function\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n    \n    function placeBet(uint _outcome) public payable {\n        require(msg.value > 0, \"Bet amount must be greater than 0\");\n        \n        bets[betCount] = Bet(msg.sender, msg.value, _outcome, false);\n        emit BetPlaced(msg.sender, betCount, msg.value, _outcome);\n        betCount++;\n    }\n    \n    function claimBet(uint _betId) public {\n        Bet storage bet = bets[_betId];\n        require(msg.sender == bet.user, \"You are not the owner of this bet\");\n        require(bet.outcome > 0 && bet.outcome < 4, \"Invalid outcome\");\n        require(!bet.claimed, \"Bet already claimed\");\n        \n        uint winnings = bet.amount * 2;\n        if (bet.outcome == _getRandomOutcome()) {\n            payable(msg.sender).transfer(winnings);\n        }\n        \n        bet.claimed = true;\n        emit BetClaimed(msg.sender, _betId, winnings, bet.outcome);\n    }\n    \n    function _getRandomOutcome() private view returns (uint) {\n        return uint(keccak256(abi.encodePacked(block.timestamp, block.difficulty, msg.sender))) % 3 + 1;\n    }\n}\n",
        "valid_code": true
    },
    "Contract for decentralized music streaming payments": {
        "check_results": {
            "abi": {
                "MusicStreamingPayments": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "PaymentReceived",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "allowedUser",
                                "type": "address"
                            }
                        ],
                        "name": "PermissionGranted",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "deposit",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            }
                        ],
                        "name": "getBalance",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            }
                        ],
                        "name": "grantPermission",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            }
                        ],
                        "name": "revokePermission",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            },
                            {
                                "internalType": "bool",
                                "name": "_status",
                                "type": "bool"
                            }
                        ],
                        "name": "setAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_to",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transfer",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "userBalances",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "userPermissions",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "withdraw",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x0AfEABe59ebA5724aBC84CB21EDF4973f62EC99F",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract MusicStreamingPayments {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => uint256) public userBalances;\n    mapping(address => mapping(address => bool)) public userPermissions;\n    \n    event PaymentReceived(address from, address to, uint256 amount);\n    event PermissionGranted(address user, address allowedUser);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can call this function\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can call this function\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function setAdmin(address _admin, bool _status) public onlyOwner {\n        admins[_admin] = _status;\n    }\n    \n    function grantPermission(address _user) public {\n        require(_user != msg.sender, \"Cannot grant permission to yourself\");\n        userPermissions[msg.sender][_user] = true;\n        emit PermissionGranted(msg.sender, _user);\n    }\n    \n    function revokePermission(address _user) public {\n        userPermissions[msg.sender][_user] = false;\n    }\n    \n    function deposit() public payable {\n        userBalances[msg.sender] += msg.value;\n    }\n    \n    function withdraw(uint256 _amount) public {\n        require(_amount <= userBalances[msg.sender], \"Insufficient balance\");\n        userBalances[msg.sender] -= _amount;\n        payable(msg.sender).transfer(_amount);\n    }\n    \n    function transfer(address _to, uint256 _amount) public {\n        require(userPermissions[msg.sender][_to], \"Sender does not have permission to transfer to recipient\");\n        require(_amount <= userBalances[msg.sender], \"Insufficient balance\");\n        \n        userBalances[msg.sender] -= _amount;\n        userBalances[_to] += _amount;\n        emit PaymentReceived(msg.sender, _to, _amount);\n    }\n    \n    function getBalance(address _user) public view returns (uint256) {\n        return userBalances[_user];\n    }\n}\n",
        "valid_code": true
    },
    "Raffle draw contract": {
        "check_results": {
            "abi": {
                "RaffleDraw": [
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_ticketPrice",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "totalParticipants",
                                "type": "uint256"
                            }
                        ],
                        "name": "RaffleClosed",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "ticketPrice",
                                "type": "uint256"
                            }
                        ],
                        "name": "RaffleOpened",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "winner",
                                "type": "address"
                            }
                        ],
                        "name": "WinnerSelected",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_numTickets",
                                "type": "uint256"
                            }
                        ],
                        "name": "buyTicket",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "closeRaffle",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getOwner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getParticipantsCount",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "isRaffleOpen",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "openRaffle",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "participants",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "selectWinner",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "ticketPrice",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "ticketsBought",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "withdrawFunds",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x490b5BD6f5932dFD14aA75EbFf25Dd54C95e3693",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract RaffleDraw {\n    address public owner;\n    uint public ticketPrice;\n    mapping(address => uint) public ticketsBought;\n    address[] public participants;\n    bool public isRaffleOpen;\n\n    event RaffleOpened(uint ticketPrice);\n    event RaffleClosed(uint totalParticipants);\n    event WinnerSelected(address winner);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can call this function\");\n        _;\n    }\n\n    constructor(uint _ticketPrice) {\n        owner = msg.sender;\n        ticketPrice = _ticketPrice;\n    }\n\n    function buyTicket(uint _numTickets) external payable {\n        require(isRaffleOpen, \"Raffle is not open for ticket purchases\");\n        require(msg.value == ticketPrice * _numTickets, \"Incorrect ticket price sent\");\n        \n        ticketsBought[msg.sender] += _numTickets;\n        \n        for (uint i = 0; i < _numTickets; i++) {\n            participants.push(msg.sender);\n        }\n    }\n\n    function openRaffle() external onlyOwner {\n        require(!isRaffleOpen, \"Raffle is already open\");\n        isRaffleOpen = true;\n        emit RaffleOpened(ticketPrice);\n    }\n\n    function closeRaffle() external onlyOwner {\n        require(isRaffleOpen, \"Raffle is not open\");\n        isRaffleOpen = false;\n        emit RaffleClosed(participants.length);\n    }\n\n    function selectWinner() external onlyOwner {\n        require(!isRaffleOpen, \"Raffle is still open\");\n        require(participants.length > 0, \"No participants in the raffle\");\n\n        uint index = random() % participants.length;\n        address winner = participants[index];\n        emit WinnerSelected(winner);\n\n        // Reset raffle\n        delete participants;\n        isRaffleOpen = false;\n\n        // Transfer prize to winner\n        payable(winner).transfer(address(this).balance);\n    }\n\n    function random() private view returns (uint) {\n        return uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp, participants)));\n    }\n\n    function withdrawFunds() external onlyOwner {\n        payable(owner).transfer(address(this).balance);\n    }\n\n    function getParticipantsCount() external view returns (uint) {\n        return participants.length;\n    }\n\n    function getOwner() external view returns (address) {\n        return owner;\n    }\n}\n",
        "valid_code": true
    },
    "Stablecoin pegging contract": {
        "check_results": {
            "abi": {
                "StablecoinPegging": [
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_initialPegValue",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "newValue",
                                "type": "uint256"
                            }
                        ],
                        "name": "PegValueChanged",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_newValue",
                                "type": "uint256"
                            }
                        ],
                        "name": "changePegValue",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "convertFromPeg",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "convertToPeg",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "pegValue",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x39A2c7ea77B3dE33277f0f084F560349a0Be839E",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract StablecoinPegging {\n    address public owner;\n    mapping(address => bool) public admins;\n    uint public pegValue;\n\n    event PegValueChanged(uint newValue);\n    event AdminAdded(address admin);\n    event AdminRemoved(address admin);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n\n    constructor(uint _initialPegValue) {\n        owner = msg.sender;\n        pegValue = _initialPegValue;\n        admins[msg.sender] = true;\n    }\n\n    function changePegValue(uint _newValue) external onlyAdmin {\n        pegValue = _newValue;\n        emit PegValueChanged(_newValue);\n    }\n\n    function addAdmin(address _admin) external onlyOwner {\n        admins[_admin] = true;\n        emit AdminAdded(_admin);\n    }\n\n    function removeAdmin(address _admin) external onlyOwner {\n        admins[_admin] = false;\n        emit AdminRemoved(_admin);\n    }\n\n    function convertToPeg(uint _amount) external view returns (uint) {\n        return _amount / pegValue;\n    }\n\n    function convertFromPeg(uint _amount) external view returns (uint) {\n        return _amount * pegValue;\n    }\n}\n",
        "valid_code": true
    },
    "Job freelancing contract platform": {
        "check_results": {
            "abi": {
                "JobFreelancingPlatform": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "bytes32",
                                "name": "action",
                                "type": "bytes32"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "value",
                                "type": "uint256"
                            }
                        ],
                        "name": "ActionExecuted",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "administrators",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "_action",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_value",
                                "type": "uint256"
                            }
                        ],
                        "name": "executeAction",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "_action",
                                "type": "bytes32"
                            }
                        ],
                        "name": "getUserAction",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "bytes32",
                                "name": "_action",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_value",
                                "type": "uint256"
                            }
                        ],
                        "name": "setUserAction",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "bytes32",
                                "name": "",
                                "type": "bytes32"
                            }
                        ],
                        "name": "userActions",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x3E61078FD07F2aCfb2FEB55764aE36BbC9a89ce3",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract JobFreelancingPlatform {\n    address public owner;\n    mapping(address => bool) public administrators;\n    mapping(address => mapping(bytes32 => uint)) public userActions;\n    \n    event ActionExecuted(address indexed user, bytes32 action, uint value);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(administrators[msg.sender], \"Only administrators can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        administrators[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        administrators[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        administrators[_admin] = false;\n    }\n    \n    function setUserAction(bytes32 _action, uint _value) public {\n        userActions[msg.sender][_action] = _value;\n        emit ActionExecuted(msg.sender, _action, _value);\n    }\n    \n    function getUserAction(address _user, bytes32 _action) public view returns (uint) {\n        return userActions[_user][_action];\n    }\n    \n    function executeAction(address _user, bytes32 _action, uint _value) public onlyAdmin {\n        userActions[_user][_action] = _value;\n        emit ActionExecuted(_user, _action, _value);\n    }\n}\n",
        "valid_code": true
    },
    "Contract for managing a decentralized social network": {
        "check_results": {
            "abi": {
                "DecentralizedSocialNetwork": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "userAddress",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "username",
                                "type": "string"
                            }
                        ],
                        "name": "UserCreated",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "userAddress",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "username",
                                "type": "string"
                            }
                        ],
                        "name": "UserDeactivated",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "userAddress",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "username",
                                "type": "string"
                            }
                        ],
                        "name": "UserUpdated",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_username",
                                "type": "string"
                            },
                            {
                                "internalType": "string",
                                "name": "_bio",
                                "type": "string"
                            }
                        ],
                        "name": "createUser",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "deactivateUser",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_username",
                                "type": "string"
                            },
                            {
                                "internalType": "string",
                                "name": "_bio",
                                "type": "string"
                            }
                        ],
                        "name": "updateUser",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "users",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "username",
                                "type": "string"
                            },
                            {
                                "internalType": "string",
                                "name": "bio",
                                "type": "string"
                            },
                            {
                                "internalType": "bool",
                                "name": "isActive",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x5B6a2E3CF53faFEd398E81cd5C7360dBcC3Edd2A",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract DecentralizedSocialNetwork {\n    \n    address public owner;\n    mapping(address => bool) public admins;\n    \n    struct User {\n        string username;\n        string bio;\n        bool isActive;\n    }\n    \n    mapping(address => User) public users;\n    \n    event UserCreated(address userAddress, string username);\n    event UserUpdated(address userAddress, string username);\n    event UserDeactivated(address userAddress, string username);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _newAdmin) public onlyOwner {\n        admins[_newAdmin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        require(_admin != owner, \"Cannot remove contract owner as admin\");\n        admins[_admin] = false;\n    }\n    \n    function createUser(string memory _username, string memory _bio) public {\n        require(bytes(_username).length > 0, \"Username cannot be empty\");\n        require(bytes(_bio).length > 0, \"Bio cannot be empty\");\n        \n        users[msg.sender] = User(_username, _bio, true);\n        emit UserCreated(msg.sender, _username);\n    }\n    \n    function updateUser(string memory _username, string memory _bio) public {\n        require(users[msg.sender].isActive, \"User does not exist or is deactivated\");\n        \n        users[msg.sender].username = _username;\n        users[msg.sender].bio = _bio;\n        \n        emit UserUpdated(msg.sender, _username);\n    }\n    \n    function deactivateUser() public {\n        require(users[msg.sender].isActive, \"User does not exist or is deactivated\");\n        \n        users[msg.sender].isActive = false;\n        \n        emit UserDeactivated(msg.sender, users[msg.sender].username);\n    }\n}\n",
        "valid_code": true
    },
    "Dividend distribution contract": {
        "error": "Failed with status code 500"
    },
    "Digital identity verification system": {
        "check_results": {
            "abi": {
                "DigitalIdentityVerification": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            }
                        ],
                        "name": "UserUnverified",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            }
                        ],
                        "name": "UserVerified",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            }
                        ],
                        "name": "isUserVerified",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            }
                        ],
                        "name": "unverifyUser",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "verifiedUsers",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            }
                        ],
                        "name": "verifyUser",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x785EF01A8b85da20d3E222e94d948C4950B578b8",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract DigitalIdentityVerification {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => bool) public verifiedUsers;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event AdminAdded(address indexed admin);\n    event AdminRemoved(address indexed admin);\n    event UserVerified(address indexed user);\n    event UserUnverified(address indexed user);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Invalid new owner address\");\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n    function addAdmin(address newAdmin) public onlyOwner {\n        require(newAdmin != address(0), \"Invalid new admin address\");\n        admins[newAdmin] = true;\n        emit AdminAdded(newAdmin);\n    }\n\n    function removeAdmin(address admin) public onlyOwner {\n        admins[admin] = false;\n        emit AdminRemoved(admin);\n    }\n\n    function verifyUser(address user) public onlyAdmin {\n        verifiedUsers[user] = true;\n        emit UserVerified(user);\n    }\n\n    function unverifyUser(address user) public onlyAdmin {\n        verifiedUsers[user] = false;\n        emit UserUnverified(user);\n    }\n\n    function isUserVerified(address user) public view returns (bool) {\n        return verifiedUsers[user];\n    }\n}\n",
        "valid_code": true
    },
    "Environmental credit trading contract": {
        "check_results": {
            "abi": {
                "EnvironmentalCreditTrading": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": false,
                                "internalType": "bool",
                                "name": "paused",
                                "type": "bool"
                            }
                        ],
                        "name": "ContractPaused",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "CreditsTransferred",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "contractPaused",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "isAdmin",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "pauseContract",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "setOwner",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_to",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferCredits",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "unpauseContract",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_credits",
                                "type": "uint256"
                            }
                        ],
                        "name": "updateUserCredits",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "userCredits",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "withdraw",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x20Ec20E9e97bBDa4799B33971EC63bfB3CB95102",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract EnvironmentalCreditTrading {\n    address public owner;\n    bool public contractPaused;\n\n    mapping(address => uint256) public userCredits;\n    mapping(address => bool) public isAdmin;\n\n    event CreditsTransferred(address indexed from, address indexed to, uint256 amount);\n    event AdminAdded(address indexed admin);\n    event AdminRemoved(address indexed admin);\n    event ContractPaused(bool paused);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(isAdmin[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n\n    modifier whenNotPaused() {\n        require(!contractPaused, \"Contract is currently paused\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        isAdmin[msg.sender] = true;\n        contractPaused = false;\n    }\n\n    function transferCredits(address _to, uint256 _amount) external whenNotPaused {\n        require(userCredits[msg.sender] >= _amount, \"Insufficient credits\");\n        userCredits[msg.sender] -= _amount;\n        userCredits[_to] += _amount;\n        emit CreditsTransferred(msg.sender, _to, _amount);\n    }\n\n    function addAdmin(address _admin) external onlyOwner {\n        isAdmin[_admin] = true;\n        emit AdminAdded(_admin);\n    }\n\n    function removeAdmin(address _admin) external onlyOwner {\n        isAdmin[_admin] = false;\n        emit AdminRemoved(_admin);\n    }\n\n    function pauseContract() external onlyOwner {\n        contractPaused = true;\n        emit ContractPaused(true);\n    }\n\n    function unpauseContract() external onlyOwner {\n        contractPaused = false;\n        emit ContractPaused(false);\n    }\n\n    function withdraw() external onlyOwner {\n        payable(owner).transfer(address(this).balance);\n    }\n\n    function setOwner(address _newOwner) external onlyOwner {\n        owner = _newOwner;\n    }\n\n    // Function to update user credits (for demonstration purposes)\n    function updateUserCredits(address _user, uint256 _credits) external onlyAdmin {\n        userCredits[_user] = _credits;\n    }\n}\n",
        "valid_code": true
    },
    "Tokenized asset management contract": {
        "error": "Failed with status code 500"
    },
    "Automated executor of wills and testaments": {
        "check_results": {
            "abi": {
                "ExecutorOfWills": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "actionId",
                                "type": "uint256"
                            },
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "timestamp",
                                "type": "uint256"
                            }
                        ],
                        "name": "ActionExecuted",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_actionId",
                                "type": "uint256"
                            }
                        ],
                        "name": "addAction",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_actionId",
                                "type": "uint256"
                            }
                        ],
                        "name": "executeAction",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_actionId",
                                "type": "uint256"
                            }
                        ],
                        "name": "removeAction",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "userActions",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x79b82eaefBd3ea31A8E4aD2848e4F7319387D91E",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract ExecutorOfWills {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => mapping(uint256 => bool)) public userActions;\n    \n    event ActionExecuted(address indexed user, uint256 indexed actionId, uint256 indexed timestamp);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        require(_admin != owner, \"Owner cannot be removed as admin\");\n        admins[_admin] = false;\n    }\n    \n    function addAction(uint256 _actionId) public {\n        userActions[msg.sender][_actionId] = true;\n    }\n    \n    function removeAction(uint256 _actionId) public {\n        userActions[msg.sender][_actionId] = false;\n    }\n    \n    function executeAction(uint256 _actionId) public {\n        require(userActions[msg.sender][_actionId], \"User is not authorized to execute this action\");\n        // Execute user-defined action\n        emit ActionExecuted(msg.sender, _actionId, block.timestamp);\n    }\n}\n",
        "valid_code": true
    },
    "Contract for managing agricultural product traceability": {
        "check_results": {
            "abi": {
                "AgriculturalProductTraceability": [
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "actionType",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "Action",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_actionType",
                                "type": "string"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "addAction",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_user",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_role",
                                "type": "uint256"
                            }
                        ],
                        "name": "setUserRole",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "userRoles",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x5ADac5001042bb6d0462A202B1F0350ced49CFe4",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AgriculturalProductTraceability {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => uint) public userRoles;\n\n    event Action(address indexed user, string actionType, uint amount);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n\n    function setUserRole(address _user, uint _role) public onlyAdmin {\n        userRoles[_user] = _role;\n    }\n\n    function addAction(string memory _actionType, uint _amount) public {\n        emit Action(msg.sender, _actionType, _amount);\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        owner = _newOwner;\n    }\n\n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n\n    function removeAdmin(address _admin) public onlyOwner {\n        delete admins[_admin];\n    }\n\n    // Additional customizable functions can be added here based on user requirements\n}\n",
        "valid_code": true
    },
    "Automated tax calculation and payment contract": {
        "check_results": {
            "abi": {
                "TaxCalculationContract": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "AdminRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "previousOwner",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "OwnershipTransferred",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "TaxCalculated",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "taxRate",
                                "type": "uint256"
                            }
                        ],
                        "name": "TaxRateSet",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newAdmin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "calculateTax",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "taxRate",
                                "type": "uint256"
                            }
                        ],
                        "name": "setUserTaxRate",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "newOwner",
                                "type": "address"
                            }
                        ],
                        "name": "transferOwnership",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "userTaxRates",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0xbfd14e6A43F2aFD09C6B0760271691216497e493",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract TaxCalculationContract {\n    address public owner;\n    mapping(address => bool) public admins;\n    mapping(address => uint256) public userTaxRates;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    event AdminAdded(address indexed admin);\n    event AdminRemoved(address indexed admin);\n    event TaxRateSet(address indexed user, uint256 taxRate);\n    event TaxCalculated(address indexed user, uint256 amount);\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner {\n        require(newOwner != address(0), \"Invalid new owner address\");\n        emit OwnershipTransferred(owner, newOwner);\n        owner = newOwner;\n    }\n\n    function addAdmin(address newAdmin) public onlyOwner {\n        require(newAdmin != address(0), \"Invalid new admin address\");\n        admins[newAdmin] = true;\n        emit AdminAdded(newAdmin);\n    }\n\n    function removeAdmin(address admin) public onlyOwner {\n        require(admins[admin], \"Address is not an admin\");\n        admins[admin] = false;\n        emit AdminRemoved(admin);\n    }\n\n    function setUserTaxRate(address user, uint256 taxRate) public onlyAdmin {\n        require(user != address(0), \"Invalid user address\");\n        userTaxRates[user] = taxRate;\n        emit TaxRateSet(user, taxRate);\n    }\n\n    function calculateTax(address user, uint256 amount) public {\n        uint256 taxRate = userTaxRates[user];\n        require(taxRate > 0, \"Tax rate not set for user\");\n        uint256 taxAmount = (amount * taxRate) / 100;\n        emit TaxCalculated(user, taxAmount);\n    }\n}\n",
        "valid_code": true
    },
    "Contract for a decentralized exchange (DEX)": {
        "check_results": {
            "abi": {
                "DecentralizedExchange": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "_from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "_to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "Trade",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_from",
                                "type": "address"
                            },
                            {
                                "internalType": "address",
                                "name": "_to",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "trade",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x646967382C3D8a1625E0BE4f242E647772096DeE",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract DecentralizedExchange {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    event Trade(address indexed _from, address indexed _to, uint256 _amount);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can call this function\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can call this function\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n    \n    function trade(address _from, address _to, uint256 _amount) public onlyAdmin {\n        // Customizable trade logic here\n        \n        emit Trade(_from, _to, _amount);\n    }\n    \n    // Additional functions, roles, and features can be added as needed\n}\n",
        "valid_code": true
    },
    "Carbon offset trading contract": {
        "check_results": {
            "abi": {
                "CarbonOffsetTrading": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "buyer",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "CreditsPurchased",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "from",
                                "type": "address"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "to",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "CreditsTransferred",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "carbonCredits",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_account",
                                "type": "address"
                            }
                        ],
                        "name": "getCarbonCredits",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "purchaseCredits",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_to",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "transferCredits",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0xa1CEED54B4d235F3FC1FeB3ddc1C8A77B4b3291b",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CarbonOffsetTrading {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    mapping(address => uint256) public carbonCredits;\n    \n    event CreditsPurchased(address indexed buyer, uint256 amount);\n    event CreditsTransferred(address indexed from, address indexed to, uint256 amount);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n    \n    function purchaseCredits(uint256 _amount) public payable {\n        require(msg.value == _amount, \"Incorrect amount sent\");\n        carbonCredits[msg.sender] += _amount;\n        emit CreditsPurchased(msg.sender, _amount);\n    }\n    \n    function transferCredits(address _to, uint256 _amount) public {\n        require(_amount > 0, \"Amount must be greater than 0\");\n        require(carbonCredits[msg.sender] >= _amount, \"Insufficient credits\");\n        \n        carbonCredits[msg.sender] -= _amount;\n        carbonCredits[_to] += _amount;\n        \n        emit CreditsTransferred(msg.sender, _to, _amount);\n    }\n    \n    function getCarbonCredits(address _account) public view returns (uint256) {\n        return carbonCredits[_account];\n    }\n}\n",
        "valid_code": true
    },
    "Contract for a decentralized library of books": {
        "check_results": {
            "abi": {
                "DecentralizedLibrary": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "bookId",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "title",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "author",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "availableCopies",
                                "type": "uint256"
                            }
                        ],
                        "name": "BookAdded",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "bookId",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "borrower",
                                "type": "address"
                            }
                        ],
                        "name": "BookBorrowed",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "bookId",
                                "type": "uint256"
                            }
                        ],
                        "name": "BookRemoved",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "bookId",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "address",
                                "name": "borrower",
                                "type": "address"
                            }
                        ],
                        "name": "BookReturned",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_title",
                                "type": "string"
                            },
                            {
                                "internalType": "string",
                                "name": "_author",
                                "type": "string"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_availableCopies",
                                "type": "uint256"
                            }
                        ],
                        "name": "addBook",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "books",
                        "outputs": [
                            {
                                "internalType": "string",
                                "name": "title",
                                "type": "string"
                            },
                            {
                                "internalType": "string",
                                "name": "author",
                                "type": "string"
                            },
                            {
                                "internalType": "uint256",
                                "name": "availableCopies",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_bookId",
                                "type": "uint256"
                            }
                        ],
                        "name": "borrowBook",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_bookId",
                                "type": "uint256"
                            }
                        ],
                        "name": "removeBook",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_bookId",
                                "type": "uint256"
                            }
                        ],
                        "name": "returnBook",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "totalBooks",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0xA90EE21246A5269901DC7bD6f27bFc294BAF9f5B",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract DecentralizedLibrary {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    struct Book {\n        string title;\n        string author;\n        uint256 availableCopies;\n    }\n    \n    mapping(uint256 => Book) public books;\n    uint256 public totalBooks;\n    \n    event BookAdded(uint256 indexed bookId, string title, string author, uint256 availableCopies);\n    event BookRemoved(uint256 indexed bookId);\n    event BookBorrowed(uint256 indexed bookId, address borrower);\n    event BookReturned(uint256 indexed bookId, address borrower);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        require(_admin != owner, \"Owner cannot be removed as admin\");\n        admins[_admin] = false;\n    }\n    \n    function addBook(string memory _title, string memory _author, uint256 _availableCopies) public onlyAdmin {\n        totalBooks++;\n        books[totalBooks] = Book(_title, _author, _availableCopies);\n        emit BookAdded(totalBooks, _title, _author, _availableCopies);\n    }\n    \n    function removeBook(uint256 _bookId) public onlyAdmin {\n        require(_bookId > 0 && _bookId <= totalBooks, \"Invalid book ID\");\n        delete books[_bookId];\n        emit BookRemoved(_bookId);\n    }\n    \n    function borrowBook(uint256 _bookId) public {\n        require(_bookId > 0 && _bookId <= totalBooks, \"Invalid book ID\");\n        require(books[_bookId].availableCopies > 0, \"No available copies\");\n        \n        books[_bookId].availableCopies--;\n        emit BookBorrowed(_bookId, msg.sender);\n    }\n    \n    function returnBook(uint256 _bookId) public {\n        require(_bookId > 0 && _bookId <= totalBooks, \"Invalid book ID\");\n        books[_bookId].availableCopies++;\n        emit BookReturned(_bookId, msg.sender);\n    }\n}\n",
        "valid_code": true
    },
    "Travel insurance contract": {
        "check_results": {
            "abi": {
                "TravelInsurance": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "policyIndex",
                                "type": "uint256"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "payoutAmount",
                                "type": "uint256"
                            }
                        ],
                        "name": "ClaimProcessed",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "policyIndex",
                                "type": "uint256"
                            }
                        ],
                        "name": "PolicyCreated",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_premiumAmount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_payoutAmount",
                                "type": "uint256"
                            }
                        ],
                        "name": "createPolicy",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "getPolicyCount",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "policies",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "premiumAmount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "payoutAmount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bool",
                                "name": "isClaimed",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_policyIndex",
                                "type": "uint256"
                            }
                        ],
                        "name": "processClaim",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x96fc1d1e69764Fa74367abE0184Bc420E472eF20",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract TravelInsurance {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    struct Policy {\n        address user;\n        uint256 premiumAmount;\n        uint256 payoutAmount;\n        bool isClaimed;\n    }\n    \n    Policy[] public policies;\n    \n    event PolicyCreated(address indexed user, uint256 policyIndex);\n    event ClaimProcessed(address indexed user, uint256 policyIndex, uint256 payoutAmount);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function createPolicy(uint256 _premiumAmount, uint256 _payoutAmount) public payable {\n        require(msg.value == _premiumAmount, \"Incorrect premium amount sent\");\n        \n        Policy memory newPolicy = Policy(msg.sender, _premiumAmount, _payoutAmount, false);\n        policies.push(newPolicy);\n        \n        emit PolicyCreated(msg.sender, policies.length - 1);\n    }\n    \n    function processClaim(uint256 _policyIndex) public onlyAdmin {\n        require(_policyIndex < policies.length, \"Policy index out of bounds\");\n        Policy storage policy = policies[_policyIndex];\n        \n        require(policy.user == msg.sender, \"Only the policy holder can claim\");\n        require(!policy.isClaimed, \"Policy already claimed\");\n        \n        policy.isClaimed = true;\n        \n        payable(msg.sender).transfer(policy.payoutAmount);\n        \n        emit ClaimProcessed(msg.sender, _policyIndex, policy.payoutAmount);\n    }\n    \n    function getPolicyCount() public view returns (uint256) {\n        return policies.length;\n    }\n}\n",
        "valid_code": true
    },
    "Real-time transportation scheduling and payment contract": {
        "error": "Failed with status code 500"
    },
    "Decentralized content creation and monetization platform": {
        "check_results": {
            "abi": {
                "DecentralizedPlatform": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "user",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "string",
                                "name": "action",
                                "type": "string"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "ActionExecuted",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "string",
                                "name": "_action",
                                "type": "string"
                            },
                            {
                                "internalType": "uint256",
                                "name": "_amount",
                                "type": "uint256"
                            }
                        ],
                        "name": "executeAction",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "stateMutability": "payable",
                        "type": "receive"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x5e26519225727E428C5398b160f22C9D7887c1Da",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract DecentralizedPlatform {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    event ActionExecuted(address indexed user, string action, uint256 amount);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        admins[_admin] = false;\n    }\n    \n    function executeAction(string memory _action, uint256 _amount) public {\n        // Customizable actions can be defined here\n        // Add user-defined actions with parameters\n        \n        // Example action: Transfer Ether\n        if (keccak256(abi.encodePacked(_action)) == keccak256(abi.encodePacked(\"transferEther\"))) {\n            require(_amount > 0, \"Amount must be greater than 0\");\n            payable(msg.sender).transfer(_amount);\n            emit ActionExecuted(msg.sender, _action, _amount);\n        }\n        \n        // Add more user-defined actions as needed\n        \n        // Emit an event for each action executed\n    }\n    \n    // Add more customizable functions and features as needed\n    \n    // Fallback function to receive Ether\n    receive() external payable {}\n}\n",
        "valid_code": true
    },
    "Contract for managing a virtual reality property marketplace": {
        "check_results": {
            "abi": {
                "VirtualRealityPropertyMarketplace": [
                    {
                        "inputs": [],
                        "stateMutability": "nonpayable",
                        "type": "constructor"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "propertyId",
                                "type": "uint256"
                            }
                        ],
                        "name": "PropertyDelisted",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "propertyId",
                                "type": "uint256"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "price",
                                "type": "uint256"
                            }
                        ],
                        "name": "PropertyListed",
                        "type": "event"
                    },
                    {
                        "anonymous": false,
                        "inputs": [
                            {
                                "indexed": true,
                                "internalType": "uint256",
                                "name": "propertyId",
                                "type": "uint256"
                            },
                            {
                                "indexed": true,
                                "internalType": "address",
                                "name": "buyer",
                                "type": "address"
                            },
                            {
                                "indexed": false,
                                "internalType": "uint256",
                                "name": "price",
                                "type": "uint256"
                            }
                        ],
                        "name": "PropertyPurchased",
                        "type": "event"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "addAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "name": "admins",
                        "outputs": [
                            {
                                "internalType": "bool",
                                "name": "",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_propertyId",
                                "type": "uint256"
                            }
                        ],
                        "name": "delistProperty",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_price",
                                "type": "uint256"
                            }
                        ],
                        "name": "listProperty",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "nextPropertyId",
                        "outputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [],
                        "name": "owner",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "",
                                "type": "address"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "",
                                "type": "uint256"
                            }
                        ],
                        "name": "properties",
                        "outputs": [
                            {
                                "internalType": "address",
                                "name": "owner",
                                "type": "address"
                            },
                            {
                                "internalType": "uint256",
                                "name": "price",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bool",
                                "name": "isListed",
                                "type": "bool"
                            }
                        ],
                        "stateMutability": "view",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "uint256",
                                "name": "_propertyId",
                                "type": "uint256"
                            }
                        ],
                        "name": "purchaseProperty",
                        "outputs": [],
                        "stateMutability": "payable",
                        "type": "function"
                    },
                    {
                        "inputs": [
                            {
                                "internalType": "address",
                                "name": "_admin",
                                "type": "address"
                            }
                        ],
                        "name": "removeAdmin",
                        "outputs": [],
                        "stateMutability": "nonpayable",
                        "type": "function"
                    }
                ]
            },
            "errors": [],
            "status": "Success"
        },
        "deploy_results": {
            "contract_address": "0x5b1844B45456D34e6022fc17D212BFe13c99399E",
            "errors": [],
            "status": "Success"
        },
        "generated_code": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract VirtualRealityPropertyMarketplace {\n    address public owner;\n    mapping(address => bool) public admins;\n    \n    struct Property {\n        address owner;\n        uint256 price;\n        bool isListed;\n    }\n    \n    mapping(uint256 => Property) public properties;\n    uint256 public nextPropertyId;\n    \n    event PropertyListed(uint256 indexed propertyId, address indexed owner, uint256 price);\n    event PropertyDelisted(uint256 indexed propertyId);\n    event PropertyPurchased(uint256 indexed propertyId, address indexed buyer, uint256 price);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only contract owner can perform this action\");\n        _;\n    }\n    \n    modifier onlyAdmin() {\n        require(admins[msg.sender], \"Only admins can perform this action\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        admins[msg.sender] = true;\n    }\n    \n    function addAdmin(address _admin) public onlyOwner {\n        admins[_admin] = true;\n    }\n    \n    function removeAdmin(address _admin) public onlyOwner {\n        require(_admin != owner, \"Owner cannot be removed as admin\");\n        admins[_admin] = false;\n    }\n    \n    function listProperty(uint256 _price) public {\n        properties[nextPropertyId] = Property(msg.sender, _price, true);\n        emit PropertyListed(nextPropertyId, msg.sender, _price);\n        nextPropertyId++;\n    }\n    \n    function delistProperty(uint256 _propertyId) public {\n        require(properties[_propertyId].owner == msg.sender, \"You are not the owner of this property\");\n        properties[_propertyId].isListed = false;\n        emit PropertyDelisted(_propertyId);\n    }\n    \n    function purchaseProperty(uint256 _propertyId) public payable {\n        require(properties[_propertyId].isListed, \"Property is not listed\");\n        require(msg.value >= properties[_propertyId].price, \"Insufficient funds sent\");\n        \n        address seller = properties[_propertyId].owner;\n        properties[_propertyId].isListed = false;\n        properties[_propertyId].owner = msg.sender;\n        \n        payable(seller).transfer(msg.value);\n        \n        emit PropertyPurchased(_propertyId, msg.sender, msg.value);\n    }\n}\n",
        "valid_code": true
    }
}